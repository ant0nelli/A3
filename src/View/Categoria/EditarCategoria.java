/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View.Categoria;
import java.awt.HeadlessException;
import Model.Categoria;
import DAO.CategoriaDAO;
import View.Mensagens;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

import java.sql.SQLException;

/**
 *
 * @author arthu
 */
public class EditarCategoria extends javax.swing.JFrame {

    /**
     * Creates new form EditarCategoria
     */
    public EditarCategoria() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        atualizarComboBox();
        atualizarTabela();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnSalvarAlteracoes = new javax.swing.JButton();
        textEmbalagem = new javax.swing.JTextField();
        textNome = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tamanhoComboBox = new javax.swing.JComboBox<String>();
        jLabel9 = new javax.swing.JLabel();
        listarCategoriasComboBox = new javax.swing.JComboBox<Categoria>();
        btnVisualizarCategoria = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(625, 424));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel1.setText("Editar categoria");

        jLabel3.setText("Nome");

        jLabel4.setText("Embalagem");

        btnSalvarAlteracoes.setText("Salvar alterações");
        btnSalvarAlteracoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarAlteracoesActionPerformed(evt);
            }
        });

        textNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNomeActionPerformed(evt);
            }
        });

        jLabel5.setText("Tamanho");

        tamanhoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um tamanho", "Pequena", "Média", "Grande" }));

        jLabel9.setText("Categoria");

        btnVisualizarCategoria.setText("Visualizar categoria");
        btnVisualizarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarCategoriaActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(252, 252, 252)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(listarCategoriasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btnVisualizarCategoria))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tamanhoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textNome, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSalvarAlteracoes)
                                    .addComponent(textEmbalagem))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(161, 161, 161))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(textNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(tamanhoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(textEmbalagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addComponent(btnSalvarAlteracoes)
                        .addGap(57, 57, 57)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(listarCategoriasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnVisualizarCategoria))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1081, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //MÉTODO PARA ATUALIZAR O COMBOBOX DE CATEGORIAS
    public void atualizarComboBox(){
        CategoriaDAO atualizarComboBox = new CategoriaDAO();
        ArrayList<Categoria> categorias = atualizarComboBox.getListaCategorias();
        
        listarCategoriasComboBox.removeAllItems();
        
        Categoria placeholder = new Categoria();
        placeholder.setId(0);
        placeholder.setNome("Selecione uma categoria para visualizar");
        listarCategoriasComboBox.addItem(placeholder);
        
        for (Categoria c: categorias){
            listarCategoriasComboBox.addItem(c);
        }
        
    }
    
    //atualizar tabela
    private void atualizarTabela(){
         DefaultTableModel  modelo = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        
        
        modelo.addColumn("ID");
        modelo.addColumn("Nome");
        modelo.addColumn("Tamanho");
        modelo.addColumn("Embalagem");

        
        try{
            CategoriaDAO dao = new CategoriaDAO();
            List<Categoria> categorias = dao.getListaCategorias();
            
            for (Categoria p : categorias){
                modelo.addRow(new Object []{
                    p.getId(),
                    p.getNome(),
                    p.getTamanho(),
                    p.getEmbalagem()
            });
        }
            jTable1.setModel(modelo);
            jTable1.getTableHeader().setReorderingAllowed(false);
            
        }catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Erro: "+ex.getMessage());
        }
    }
    
    
    
    
 //BOTÃO SALVAR ALTERAÇÕES   
    private void btnSalvarAlteracoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarAlteracoesActionPerformed
        try{
            Categoria categoriaSelecionada = (Categoria) listarCategoriasComboBox.getSelectedItem();
            
            if (categoriaSelecionada.getId() == 0 || categoriaSelecionada == null){
                Mensagens.mostrarAviso("Selecione uma categoria para visualizar antes de salvar");
                //JOptionPane.showMessageDialog(null,"Selecione uma categoria para visualizar antes de salvar", "Erro categoria", JOptionPane.ERROR_MESSAGE);
                return;
            }
            Categoria categoriaAtualizada = new Categoria();
            
            String nomeCategoria = textNome.getText().trim();

            if (nomeCategoria.isEmpty()){
                Mensagens.mostrarAviso("O nome da categoria não pode ser vazio");
                //JOptionPane.showMessageDialog(null, "Insira um nome  para editar a categoria", "Erro nome categoria", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if(nomeCategoria.matches("\\d+")){
                Mensagens.mostrarAviso("O nome não pode ser apenas números.");
                //JOptionPane.showMessageDialog(null, "O nome não pode ser apenas números", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
            categoriaAtualizada.setNome(textNome.getText());
            
            String tamanhoCategoria = tamanhoComboBox.getSelectedItem().toString();
            if(tamanhoCategoria == "Selecione um tamanho"){
                Mensagens.mostrarError("Selecione um tamnho válido para salvar a categoria");
                //JOptionPane.showMessageDialog(null, "Selecione um tamanho válido para salvar a categoria.");
                return;
            }
            categoriaAtualizada.setTamanho(tamanhoComboBox.getSelectedItem().toString());
            
            
            String nomeEmbalagem = textEmbalagem.getText().trim();

            if (nomeEmbalagem.isEmpty()){
                Mensagens.mostrarAviso("A embalagem não pode estar vazia");
                //JOptionPane.showMessageDialog(null, "Insira um nome  para embalagem para editar a categoria", "Erro nome categoria", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if(nomeEmbalagem.matches("\\d+")){
                Mensagens.mostrarAviso("O nome da embalagem não pode ser apenas números");
                //JOptionPane.showMessageDialog(null, "O nome da embalagem não pode ser apenas números", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
            categoriaAtualizada.setEmbalagem(textEmbalagem.getText());
            categoriaAtualizada.setEmbalagem(textEmbalagem.getText());

            
            categoriaAtualizada.setId(categoriaSelecionada.getId());
            
            
            CategoriaDAO dao = new CategoriaDAO();
            boolean sucesso = dao.updateCategoria(categoriaAtualizada);
            if (sucesso){
                Mensagens.mostrarCheck("Categoria atualizada com sucesso!");
                //JOptionPane.showMessageDialog(null, "Cateogira atualizada com sucesso");
                atualizarComboBox();
                atualizarTabela();
                textNome.setText("");
                tamanhoComboBox.setSelectedItem("Selecione um tamanho");
                textEmbalagem.setText("");
            }else{
                Mensagens.mostrarError("Erro ao atualizar a categoria");
                //JOptionPane.showMessageDialog(null,"Erro ao atualizar categoria", "Erro", JOptionPane.ERROR_MESSAGE);
            }
            }catch (HeadlessException e){
                JOptionPane.showMessageDialog(null, "Erro ao atualizar:" + e.getMessage());
                    
        }
    }//GEN-LAST:event_btnSalvarAlteracoesActionPerformed
    
    //BOTÃO VISUALIZAR CATEGORIA
    private void btnVisualizarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizarCategoriaActionPerformed
        try{
            Categoria categoriaSelecionada = (Categoria) listarCategoriasComboBox.getSelectedItem();
            CategoriaDAO dao = new CategoriaDAO();
            
            Categoria categoriaPreenchida = dao.getListaCategoriasPorId(categoriaSelecionada.getId());
            
            
            if (categoriaSelecionada.getId()==0 || categoriaSelecionada == null){
                Mensagens.mostrarError("Selecione uma categoria para visualizar");
                //JOptionPane.showMessageDialog(null, "Erro, selecione uma categoria", "Erro seleção de categoria", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            if (categoriaPreenchida != null){
                
                textNome.setText(categoriaPreenchida.getNome());
                textEmbalagem.setText(categoriaPreenchida.getEmbalagem());  
                
                String tamanhoSalvo = categoriaPreenchida.getTamanho();
                
                tamanhoComboBox.setSelectedItem(tamanhoSalvo);

            }else{
                //JOptionPane.showMessageDialog(null, "Produto não encontrado!");
                Mensagens.mostrarError("Produto não encontrado");
            }
            
            
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Erro ao buscar categoria:" + ex.getMessage());
        }
            
           
    }//GEN-LAST:event_btnVisualizarCategoriaActionPerformed

    private void textNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNomeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
             * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
             */
            try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    //</editor-fold>
    
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditarCategoria().setVisible(true); // Apenas isso!
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalvarAlteracoes;
    private javax.swing.JButton btnVisualizarCategoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<Categoria> listarCategoriasComboBox;
    private javax.swing.JComboBox<String> tamanhoComboBox;
    private javax.swing.JTextField textEmbalagem;
    private javax.swing.JTextField textNome;
    // End of variables declaration//GEN-END:variables
}
